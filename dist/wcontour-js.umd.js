(function(D,H){typeof exports=="object"&&typeof module!="undefined"?H(exports):typeof define=="function"&&define.amd?define(["exports"],H):(D=typeof globalThis!="undefined"?globalThis:D||self,H(D.WContour={}))})(this,function(D){"use strict";class H{constructor(){this.lineList=[]}getLineNum(){return this.lineList.length}}class q{constructor(s,e,a,i){this.xMin=s,this.xMax=e,this.yMin=a,this.yMax=i}include(s){return this.xMin<=s.xMin&&this.xMax>=s.xMax&&this.yMin<=s.yMin&&this.yMax>=s.yMax}}class se{constructor(){this.extent=new q,this.pointList=[],this.ijPointList=[]}}class O{constructor(s=0,e=0){this.x=s,this.y=e}clone(){return new O(this.x,this.y)}}class J{constructor(){this.point=new O}clone(){let s=new J;return s.id=this.id,s.borderIdx=this.borderIdx,s.bInnerIdx=this.bInnerIdx,s.point=this.point,s.value=this.value,s}}class re{constructor(){this.sPoint=new O,this.point=new O}}class ee{constructor(s,e){this.i=s,this.j=e}}class Z{constructor(){this.pointList=[]}}function te(n,s){let e=Math.abs(n*1e-5);return Math.abs(n-s)<=e}function le(n,s,e){let a=(s.y-n.y)/(s.x-n.x),i=(a*a*n.x+a*(e.y-n.y)+e.x)/(a*a+1),t=a*(i-n.x)+n.y;return Math.sqrt((e.y-t)*(e.y-t)+(e.x-i)*(e.x-i))}function oe(n){let s,e,a,i,t,l=n[0];for(s=l.x,a=l.x,e=l.y,i=l.y,t=1;t<n.length;t++)l=n[t],l.x<s&&(s=l.x),l.x>a&&(a=l.x),l.y<e&&(e=l.y),l.y>i&&(i=l.y);let r=new q;return r.xMin=s,r.yMin=e,r.xMax=a,r.yMax=i,r}function z(n,s){let e,a,i,t,l,r,p=n[0];for(a=p.x,t=p.x,i=p.y,l=p.y,r=1;r<n.length;r++)p=n[r],p.x<a&&(a=p.x),p.x>t&&(t=p.x),p.y<i&&(i=p.y),p.y>l&&(l=p.y);return s.xMin=a,s.yMin=i,s.xMax=t,s.yMax=l,e=(t-a)*(l-i),e}function Q(n){let s,e,a=0,i=0;for(s=0;s<n.length-1;s++)e=n[s],s===0?(a=e.y,i=0):a<e.y&&(a=e.y,i=s);let t,l,r,p,f,h;return p=i-1,f=i,h=i+1,i===0&&(p=n.length-2),t=n[p],l=n[f],r=n[h],(r.x-t.x)*(l.y-t.y)-(l.x-t.x)*(r.y-t.y)>0}function G(n,s){let e=!1,a=n.length;if(a<3)return!1;let i=n[a-1].x,t=n[a-1].y,l,r,p,f;for(let h=0;h<a;h++){const g=n[h].x,x=n[h].y;g>i?(l=i,p=g,r=t,f=x):(l=g,p=i,r=x,f=t),g<s.x==s.x<=i&&(s.y-r)*(p-l)<(f-r)*(s.x-l)&&(e=!e),i=g,t=x}return e}function fe(n,s,e,a){let i,t,l=[],r,p,f;if(n.length===0){let u=e[0].value,o=e[0].value;for(let L of e)L.value>u&&(u=L.value),L.value<o&&(o=L.value);i=new R,p=a[0].value,p<o?(u=o,o=p,i.isHighCenter=!0):p>u&&(o=u,u=p,i.isHighCenter=!1),t=new Z,t.type="Border",t.value=p,l=[];for(let L of a)l.push(L.point);t.pointList=[],t.pointList.push(...l),t.pointList.length>0&&(i.isBorder=!0,i.lowValue=o,i.highValue=u,r=new q,i.area=z(t.pointList,r),i.isClockWise=Q(t.pointList),i.extent=r,i.outLine=t,i.holeLines=[],n.push(i))}n.push(...s);let h,g,x=n.length,d;for(let u=1;u<x;u++)if(i=n[u],i.outLine.type==="Close"){h=i.extent,f=i.outLine.pointList[0];for(let o=u-1;o>=0;o--)if(d=n[o],g=d.extent,l=[],l.push(...d.outLine.pointList),G(l,f)&&h.xMin>g.xMin&&h.yMin>g.yMin&&h.xMax<g.xMax&&h.yMax<g.yMax){d.isHighCenter?i.isHighCenter=i.highValue!==d.lowValue:i.isHighCenter=i.lowValue===d.highValue;break}}return n}function ae(n,s){for(let e=0;e<s.length;e++){let a=s[e],i=oe(a);for(let t=n.length-1;t>=0;t--){let l=n[t];if(l.extent.include(i)){let r=!0;for(let p of a)if(!G(l.outLine.pointList,p)){r=!1;break}if(r){l.addHole(a);break}}}}}function ue(n){let s=[],e,a;for(e=0;e<n.length;e++){let i=n[e];(!i.isBorder||i.isInnerBorder)&&(i.holeIndex=1,s.push(i))}if(s.length===0)return n;{let i=[];for(e=1;e<s.length;e++){let l=s[e];for(a=e-1;a>=0;a--){let r=s[a];if(r.extent.include(l.extent)&&G(r.outLine.pointList,l.outLine.pointList[0])){l.holeIndex=r.holeIndex+1,r.addHole(l);break}}}let t=[];for(e=0;e<s.length;e++)s[e].holeIndex===1&&t.push(s[e]);for(e=0;e<n.length;e++){let l=n[e];if(l.isBorder&&!l.isInnerBorder){for(a=0;a<t.length;a++){let r=t[a];l.extent.include(r.extent)&&G(l.outLine.pointList,r.outLine.pointList[0])&&l.addHole(r)}i.push(l)}}return i.push(...s),i}}class R{constructor(){this.isInnerBorder=!1,this.extent=new q,this.outLine=new Z,this.holeLines=[]}clone(){let s=new R;return s.isBorder=this.isBorder,s.lowValue=this.lowValue,s.highValue=this.highValue,s.isClockWise=this.isClockWise,s.startPointIdx=this.startPointIdx,s.isHighCenter=this.isHighCenter,s.extent=this.extent,s.area=this.area,s.outLine=this.outLine,s.holeLines=this.holeLines,s.holeIndex=this.holeIndex,s}hasHoles(){return this.holeLines.length>0}addHole(s){if(s instanceof R)this.holeLines.push(s.outLine);else{let e=s;Q(e)&&(e=e.reverse());const a=new Z;a.pointList=e,this.holeLines.push(a)}}}function he(n,s,e,a,i,t){let l=!0,r,p,f,h;return s<e?n[e][i-1]===1&&n[e][i+1]===1?(r=n[e-1][i-1],p=n[e+1][i],f=n[e+1][i-1],r!==0&&p===0||r===0&&p!==0&&f!==0?(t[0]=e,t[1]=i-1):(t[0]=e,t[1]=i+1)):n[e][i-1]===1&&n[e+1][i]===1?(r=n[e+1][i-1],p=n[e+1][i+1],f=n[e][i-1],h=n[e][i+1],r===0||p===0||f===0||h===0?r===0&&h===0||p===0&&f===0?(t[0]=e,t[1]=i-1):(t[0]=e+1,t[1]=i):(t[0]=e,t[1]=i-1)):n[e][i+1]===1&&n[e+1][i]===1?(r=n[e+1][i-1],p=n[e+1][i+1],f=n[e][i-1],h=n[e][i+1],r===0||p===0||f===0||h===0?r===0&&h===0||p===0&&f===0?(t[0]=e,t[1]=i+1):(t[0]=e+1,t[1]=i):(t[0]=e,t[1]=i+1)):n[e][i-1]===1?(t[0]=e,t[1]=i-1):n[e][i+1]===1?(t[0]=e,t[1]=i+1):n[e+1][i]===1?(t[0]=e+1,t[1]=i):l=!1:a<i?n[e+1][i]===1&&n[e-1][i]===1?(r=n[e+1][i-1],p=n[e][i+1],f=n[e+1][i+1],r!==0&&p===0||r===0&&p!==0&&f!==0?(t[0]=e+1,t[1]=i):(t[0]=e-1,t[1]=i)):n[e+1][i]===1&&n[e][i+1]===1?(f=n[e-1][i],h=n[e+1][i],r=n[e-1][i+1],p=n[e+1][i+1],r===0||p===0||f===0||h===0?r===0&&h===0||p===0&&f===0?(t[0]=e+1,t[1]=i):(t[0]=e,t[1]=i+1):(t[0]=e+1,t[1]=i)):n[e-1][i]===1&&n[e][i+1]===1?(f=n[e-1][i],h=n[e+1][i],r=n[e-1][i+1],p=n[e+1][i+1],r===0||p===0||f===0||h===0?r===0&&h===0||p===0&&f===0?(t[0]=e-1,t[1]=i):(t[0]=e,t[1]=i+1):(t[0]=e-1,t[1]=i)):n[e+1][i]===1?(t[0]=e+1,t[1]=i):n[e-1][i]===1?(t[0]=e-1,t[1]=i):n[e][i+1]===1?(t[0]=e,t[1]=i+1):l=!1:s>e?n[e][i-1]===1&&n[e][i+1]===1?(r=n[e+1][i-1],p=n[e-1][i],f=n[e-1][i+1],r!==0&&p===0||r===0&&p!==0&&f!==0?(t[0]=e,t[1]=i-1):(t[0]=e,t[1]=i+1)):n[e][i-1]===1&&n[e-1][i]===1?(r=n[e-1][i-1],p=n[e-1][i+1],f=n[e][i-1],h=n[e][i+1],r===0||p===0||f===0||h===0?r===0&&h===0||p===0&&f===0?(t[0]=e,t[1]=i-1):(t[0]=e-1,t[1]=i):(t[0]=e,t[1]=i-1)):n[e][i+1]===1&&n[e-1][i]===1?(r=n[e-1][i-1],p=n[e-1][i+1],f=n[e][i-1],h=n[e][i+1],r===0||p===0||f===0||h===0?r===0&&h===0||p===0&&f===0?(t[0]=e,t[1]=i+1):(t[0]=e-1,t[1]=i):(t[0]=e,t[1]=i+1)):n[e][i-1]===1?(t[0]=e,t[1]=i-1):n[e][i+1]===1?(t[0]=e,t[1]=i+1):n[e-1][i]===1?(t[0]=e-1,t[1]=i):l=!1:a>i&&(n[e+1][i]===1&&n[e-1][i]===1?(r=n[e+1][i+1],p=n[e][i-1],f=n[e-1][i-1],r!==0&&p===0||r===0&&p!==0&&f!==0?(t[0]=e+1,t[1]=i):(t[0]=e-1,t[1]=i)):n[e+1][i]===1&&n[e][i-1]===1?(f=n[e-1][i],h=n[e+1][i],r=n[e-1][i-1],p=n[e+1][i-1],r===0||p===0||f===0||h===0?r===0&&h===0||p===0&&f===0?(t[0]=e+1,t[1]=i):(t[0]=e,t[1]=i-1):(t[0]=e+1,t[1]=i)):n[e-1][i]===1&&n[e][i-1]===1?(f=n[e-1][i],h=n[e+1][i],r=n[e-1][i-1],p=n[e+1][i-1],r===0||p===0||f===0||h===0?r===0&&h===0||p===0&&f===0?(t[0]=e-1,t[1]=i):(t[0]=e,t[1]=i-1):(t[0]=e-1,t[1]=i)):n[e+1][i]===1?(t[0]=e+1,t[1]=i):n[e-1][i]===1?(t[0]=e-1,t[1]=i):n[e][i-1]===1?(t[0]=e,t[1]=i-1):l=!1),l}function Y(n,s,e,a,i,t,l,r,p,f,h,g){let x=!0,d=0,u=0,o=0,L=0,c=!0;return n<s?e[s][t]!==-2&&e[s][t+1]!==-2?e[s][t]<e[s][t+1]?(d=l[t],u=r[s]+e[s][t]*(r[s+1]-r[s]),o=s,L=t,e[o][L]=-2,c=!1):(d=l[t+1],u=r[s]+e[s][t+1]*(r[s+1]-r[s]),o=s,L=t+1,e[o][L]=-2,c=!1):e[s][t]!==-2&&e[s][t+1]===-2?(d=l[t],u=r[s]+e[s][t]*(r[s+1]-r[s]),o=s,L=t,e[o][L]=-2,c=!1):e[s][t]===-2&&e[s][t+1]!==-2?(d=l[t+1],u=r[s]+e[s][t+1]*(r[s+1]-r[s]),o=s,L=t+1,e[o][L]=-2,c=!1):a[s+1][t]!==-2?(d=l[t]+a[s+1][t]*(l[t+1]-l[t]),u=r[s+1],o=s+1,L=t,a[o][L]=-2,c=!0):x=!1:i<t?a[s][t]!==-2&&a[s+1][t]!==-2?a[s][t]<a[s+1][t]?(d=l[t]+a[s][t]*(l[t+1]-l[t]),u=r[s],o=s,L=t,a[o][L]=-2,c=!0):(d=l[t]+a[s+1][t]*(l[t+1]-l[t]),u=r[s+1],o=s+1,L=t,a[o][L]=-2,c=!0):a[s][t]!==-2&&a[s+1][t]===-2?(d=l[t]+a[s][t]*(l[t+1]-l[t]),u=r[s],o=s,L=t,a[o][L]=-2,c=!0):a[s][t]===-2&&a[s+1][t]!==-2?(d=l[t]+a[s+1][t]*(l[t+1]-l[t]),u=r[s+1],o=s+1,L=t,a[o][L]=-2,c=!0):e[s][t+1]!==-2?(d=l[t+1],u=r[s]+e[s][t+1]*(r[s+1]-r[s]),o=s,L=t+1,e[o][L]=-2,c=!1):x=!1:l[t]<p?e[s-1][t]!==-2&&e[s-1][t+1]!==-2?e[s-1][t]>e[s-1][t+1]?(d=l[t],u=r[s-1]+e[s-1][t]*(r[s]-r[s-1]),o=s-1,L=t,e[o][L]=-2,c=!1):(d=l[t+1],u=r[s-1]+e[s-1][t+1]*(r[s]-r[s-1]),o=s-1,L=t+1,e[o][L]=-2,c=!1):e[s-1][t]!==-2&&e[s-1][t+1]===-2?(d=l[t],u=r[s-1]+e[s-1][t]*(r[s]-r[s-1]),o=s-1,L=t,e[o][L]=-2,c=!1):e[s-1][t]===-2&&e[s-1][t+1]!==-2?(d=l[t+1],u=r[s-1]+e[s-1][t+1]*(r[s]-r[s-1]),o=s-1,L=t+1,e[o][L]=-2,c=!1):a[s-1][t]!==-2?(d=l[t]+a[s-1][t]*(l[t+1]-l[t]),u=r[s-1],o=s-1,L=t,a[o][L]=-2,c=!0):x=!1:a[s+1][t-1]!==-2&&a[s][t-1]!==-2?a[s+1][t-1]>a[s][t-1]?(d=l[t-1]+a[s+1][t-1]*(l[t]-l[t-1]),u=r[s+1],o=s+1,L=t-1,a[o][L]=-2,c=!0):(d=l[t-1]+a[s][t-1]*(l[t]-l[t-1]),u=r[s],o=s,L=t-1,a[o][L]=-2,c=!0):a[s+1][t-1]!==-2&&a[s][t-1]===-2?(d=l[t-1]+a[s+1][t-1]*(l[t]-l[t-1]),u=r[s+1],o=s+1,L=t-1,a[o][L]=-2,c=!0):a[s+1][t-1]===-2&&a[s][t-1]!==-2?(d=l[t-1]+a[s][t-1]*(l[t]-l[t-1]),u=r[s],o=s,L=t-1,a[o][L]=-2,c=!0):e[s][t-1]!==-2?(d=l[t-1],u=r[s]+e[s][t-1]*(r[s+1]-r[s]),o=s,L=t-1,e[o][L]=-2,c=!1):x=!1,f[0]=o,f[1]=L,h[0]=d,h[1]=u,g[0]=c,x}function xe(n,s,e,a,i){let t=[],l,r,p,f,h,g,x;l=[],l.push(...n);let d,u,o,L,c=[];for(c.length=s.length-1,g=0;g<c.length;g++)c[g]=0;let y,w,b,I=0,k=0,P=0,v=[],C,M,B;for(w=s.length,g=0;g<w;g++){if(s[g].id===-1)continue;y=g,v.push(s[g]);let $=!1;if(c[y]<2){o=s[y],B=o.bInnerIdx,d=[];let K=[];d.push(o.point),K.push(y),C=o.borderIdx,M=C,y+=1,B+=1,B===i[C]-1&&(y=y-(i[C]-1)),b=0;do{if(o=s[y],o.id===-1){if(c[y]===1)break;P=o.value,d.push(o.point),c[y]+=1,K.push(y)}else{if(c[y]===2)break;for(c[y]+=1,K.push(y),r=l[o.id],b===0?(I=r.value,k=r.value,b+=1):I===k&&(r.value>I?k=r.value:r.value<I&&(I=r.value),b+=1),u=[],u.push(...r.pointList),p=u[0],o.point.x===p.x&&o.point.y===p.y||u.reverse(),d.push(...u),x=0;x<s.length;x++)if(x!==y&&(L=s[x],L.id===o.id)){y=x,B=L.bInnerIdx,c[y]+=1,K.push(y),M=L.borderIdx,o.borderIdx>0&&o.borderIdx===L.borderIdx&&($=!0);break}}if(y===g){if(d.length>0){if($){let U=!1,F=0;for(let N=0;N<o.borderIdx;N++)F+=i[N];let S=F,j=F+i[o.borderIdx],X=S;for(let N=S;N<j;N++)if(K.indexOf(N)<0){X=N;break}if(G(d,s[X].point)&&(U=!0),U)break}f=new R,f.isBorder=!0,f.isInnerBorder=$,f.lowValue=I,f.highValue=k,h=new q,f.area=z(d,h),f.isClockWise=!0,f.startPointIdx=v.length-1,f.extent=h,f.outLine.pointList=d,f.outLine.value=I,f.isHighCenter=!0,I===k&&P<I&&(f.isHighCenter=!1),f.outLine.type="Border",f.holeLines=[],t.push(f)}break}y+=1,B+=1,C!==M&&(C=M),B===i[C]-1&&(y=y-(i[C]-1),B=0)}while(!0)}if($=!1,y=g,c[y]<2){d=[];let K=[];o=s[y],B=o.bInnerIdx,d.push(o.point),K.push(y),C=o.borderIdx,M=C,y+=-1,B+=-1,B===-1&&(y=y+(i[C]-1)),b=0;do{if(o=s[y],o.id===-1){if(c[y]===1)break;P=o.value,d.push(o.point),K.push(y),c[y]+=1}else{if(c[y]===2)break;for(c[y]+=1,K.push(y),r=l[o.id],b===0?(I=r.value,k=r.value,b+=1):I===k&&(r.value>I?k=r.value:r.value<I&&(I=r.value),b+=1),u=[],u.push(...r.pointList),p=u[0],o.point.x===p.x&&o.point.y===p.y||u.reverse(),d.push(...u),x=0;x<s.length;x++)if(x!==y&&(L=s[x],L.id===o.id)){y=x,B=L.bInnerIdx,c[y]+=1,K.push(y),M=L.borderIdx,o.borderIdx>0&&o.borderIdx===L.borderIdx&&($=!0);break}}if(y===g){if(d.length>0){if($){let U=!1,F=0;for(let N=0;N<o.borderIdx;N++)F+=i[N];let S=F,j=F+i[o.borderIdx],X=S;for(let N=S;N<j;N++)if(K.indexOf(N)<0){X=N;break}if(G(d,s[X].point)&&(U=!0),U)break}f=new R,f.isBorder=!0,f.isInnerBorder=$,f.lowValue=I,f.highValue=k,h=new q,f.area=z(d,h),f.isClockWise=!1,f.startPointIdx=v.length-1,f.extent=h,f.outLine.pointList=d,f.outLine.value=I,f.isHighCenter=!0,I===k&&P<I&&(f.isHighCenter=!1),f.outLine.type="Border",f.holeLines=[],t.push(f)}break}y+=-1,B+=-1,C!==M&&(C=M),B===-1&&(y=y+i[C],B=i[C]-1)}while(!0)}}let E=[],W;for(g=0;g<l.length;g++)if(r=l[g],r.type==="Close"){for(f=new R,f.isBorder=!1,f.lowValue=r.value,f.highValue=r.value,h=new q,f.area=z(r.pointList,h),f.isClockWise=Q(r.pointList),f.extent=h,f.outLine=r,f.isHighCenter=!0,f.holeLines=[],W=!1,x=0;x<E.length;x++)if(f.area>E[x].area){E.splice(x,0,f),W=!0;break}W||E.push(f)}t.length===0&&(r=new Z,r.type="Border",r.value=a[0],r.pointList=[],r.pointList.push(...e.lineList[0].pointList),r.pointList.length>0&&(f=new R,f.lowValue=r.value,f.highValue=r.value,h=new q,f.area=z(r.pointList,h),f.isClockWise=Q(r.pointList),f.extent=h,f.outLine=r,f.isHighCenter=!1,t.push(f))),t.push(...E);let _,m,V=t.length,T;for(g=V-1;g>=0;g+=-1)if(f=t[g],f.outLine.type==="Close"){for(_=f.extent,I=f.lowValue,p=f.outLine.pointList[0],x=g-1;x>=0;x+=-1)if(T=t[x],m=T.extent,k=T.lowValue,u=[],u.push(...T.outLine.pointList),G(u,p)&&_.xMin>m.xMin&&_.yMin>m.yMin&&_.xMax<m.xMax&&_.yMax<m.yMax){(I<k||I===k&&T.isHighCenter)&&(f.isHighCenter=!1);break}}return t}function ie(n,s,e,a,i,t,l){let r,p,f,h,g,x,d,u,o=a.length,L=i.length,c=a[1]-a[0],y=i[1]-i[0],w=t[0],b=t[1];if(r=s[w][b],p=s[w][b+1],f=s[w+1][b],h=s[w+1][b+1],g=r+(f-r)*((n.y-i[w])/y),x=p+(h-p)*((n.y-i[w])/y),d=g+(x-g)*((n.x-a[b])/c),r=e[w][b],p=e[w][b+1],f=e[w+1][b],h=e[w+1][b+1],g=r+(f-r)*((n.y-i[w])/y),x=p+(h-p)*((n.y-i[w])/y),u=g+(x-g)*((n.x-a[b])/c),l?(n.x+=d,n.y+=u):(n.x-=d,n.y-=u),!(n.x>=a[b]&&n.x<=a[b+1]&&n.y>=i[w]&&n.y<=i[w+1])){if(n.x<a[0]||n.x>a[a.length-1]||n.y<i[0]||n.y>i[i.length-1])return!1;for(let I=w-2;I<w+3;I++)if(I>=0&&I<L&&n.y>=i[I]&&n.y<=i[I+1]){w=I;for(let k=b-2;k<b+3;k++)if(k>=0&&k<o&&n.x>=a[k]&&n.x<=a[k+1]){b=k;break}break}}return t[0]=w,t[1]=b,!0}const A=class{constructor(n,s,e,a){this._borders=[],this._s0=n,this._m=n.length,this._n=n[0].length,this._xs=s,this._ys=e,this._undefData=a,this._s1=this._tracingDataFlag(),this._borders=this._tracingBorders()}_tracingDataFlag(){let n=[];const{_s0:s,_m:e,_n:a,_undefData:i}=this;for(let l=0;l<e;l++){n[l]=[];for(let r=0;r<a;r++)n[l][r]=te(s[l][r],i)?0:1}for(let l=1;l<e-1;l++)for(let r=1;r<a-1;r++)if(n[l][r]===1){let p=n[l][r-1],f=n[l][r+1],h=n[l-1][r],g=n[l+1][r],x=n[l-1][r-1],d=n[l-1][r+1],u=n[l+1][r-1],o=n[l+1][r+1];p>0&&f>0&&h>0&&g>0&&x>0&&d>0&&u>0&&o>0&&(n[l][r]=2),p+f+h+g+x+d+u+o<=2&&(n[l][r]=0)}let t;for(;;){t=!1;for(let l=1;l<e-1;l++)for(let r=1;r<a-1;r++)if(n[l][r]===1){let p=n[l][r-1],f=n[l][r+1],h=n[l-1][r],g=n[l+1][r],x=n[l-1][r-1],d=n[l-1][r+1],u=n[l+1][r-1],o=n[l+1][r+1];(p===0&&f===0||h===0&&g===0)&&(n[l][r]=0,t=!0),(u===0&&f===0&&h===0||o===0&&p===0&&h===0||x===0&&f===0&&g===0||d===0&&p===0&&g===0)&&(n[l][r]=0,t=!0)}if(!t)break}for(let l=0;l<a;l++)n[0][l]===1&&(n[1][l]===0?n[0][l]=0:l===0?n[0][l+1]===0&&(n[0][l]=0):l===a-1?n[0][a-2]===0&&(n[0][l]=0):n[0][l-1]===0&&n[0][l+1]===0&&(n[0][l]=0)),n[e-1][l]===1&&(n[e-2][l]===0?n[e-1][l]=0:l===0?n[e-1][l+1]===0&&(n[e-1][l]=0):l===a-1?n[e-1][a-2]===0&&(n[e-1][l]=0):n[e-1][l-1]===0&&n[e-1][l+1]===0&&(n[e-1][l]=0));for(let l=0;l<e;l++)n[l][0]===1&&(n[l][1]===0?n[l][0]=0:l===0?n[l+1][0]===0&&(n[l][0]=0):l===e-1?n[e-2][0]===0&&(n[l][0]=0):n[l-1][0]===0&&n[l+1][0]===0&&(n[l][0]=0)),n[l][a-1]===1&&(n[l][a-2]===0?n[l][a-1]=0:l===0?n[l+1][a-1]===0&&(n[l][a-1]=0):l===e-1?n[e-2][a-1]===0&&(n[l][a-1]=0):n[l-1][a-1]===0&&n[l+1][a-1]===0&&(n[l][a-1]=0));return n}_tracingBorders(){const{_s1:n,_m:s,_n:e,_xs:a,_ys:i}=this;let t=[],l=[];for(let h=0;h<s+2;h++){l[h]=[];for(let g=0;g<e+2;g++)h===0||h===s+1||g===0||g===e+1?l[h][g]=0:l[h][g]=n[h-1][g-1]}let r=[];for(let h=0;h<s+2;h++){r[h]=[];for(let g=0;g<e+2;g++)if(l[h][g]===1){let x=l[h][g-1],d=l[h][g+1],u=l[h-1][g],o=l[h+1][g],L=l[h-1][g-1],c=l[h-1][g+1],y=l[h+1][g-1],w=l[h+1][g+1];x===1&&d===1&&u===1&&o===1&&(L===0&&w===0||c===0&&y===0)?r[h][g]=2:r[h][g]=1}else r[h][g]=0}for(let h=1;h<s+1;h++)for(let g=1;g<e+1;g++)if(l[h][g]===1){let x=[],d=[];x.push(new O(a[g-1],i[h-1])),d.push(new ee(h-1,g-1));let u=0,o=0,L=h,c=g,y=L,w=-1;for(;;){let b=[];if(b[0]=u,b[1]=o,he(l,y,L,w,c,b))u=b[0],o=b[1],y=L,w=c,L=u,c=o,r[u][o]=r[u][o]-1,r[u][o]===0&&(l[u][o]=3);else break;if(x.push(new O(a[o-1],i[u-1])),d.push(new ee(u-1,o-1)),u===h&&o===g)break}if(r[h][g]=r[h][g]-1,r[h][g]===0&&(l[h][g]=3),x.length>1){let b=new se;b.area=z(x,b.extent),b.isOutLine=!0,b.isClockwise=!0,b.pointList=x,b.ijPointList=d,t.push(b)}}let p=[];for(let h=1;h<t.length;h++){const g=t[h];for(let x=0;x<h;x++){const d=t[h];if(g.area>d.area){t.splice(h,1),t.splice(x,0,g);break}}}let f;if(t.length===1){const h=t[0];Q(h.pointList)||(h.pointList=h.pointList.reverse(),h.ijPointList.reverse()),h.isClockwise=!0,f=[],f.push(h);let g=new H;g.lineList=f,p.push(g)}else for(let h=0;h<t.length&&h!==t.length;h++){const g=t[h];Q(g.pointList)||(g.pointList.reverse(),g.ijPointList.reverse()),g.isClockwise=!0,f=[],f.push(g);for(let d=h+1;d<t.length&&d!==t.length;d++){const u=t[h];if(u.extent.xMin>g.extent.xMin&&u.extent.xMax<g.extent.xMax&&u.extent.yMin>g.extent.yMin&&u.extent.yMax<g.extent.yMax){const o=u.pointList[0];G(g.pointList,o)&&(u.isOutLine=!1,Q(u.pointList)&&(u.pointList.reverse(),u.ijPointList.reverse()),u.isClockwise=!1,f.push(u),t.splice(d,1),d=d-1)}}let x=new H;x.lineList=f,p.push(x)}return p}tracingContourLines(n){const{_s0:s,_s1:e,_xs:a,_ys:i,_m:t,_n:l,_borders:r,_undefData:p}=this;let f=[],h,g=n[0]*1e-5;g===0&&(g=1e-5);for(let P=0;P<t;P++)for(let v=0;v<l;v++)te(s[P][v],p)||(s[P][v]=s[P][v]+g);let x=[],d=[];x[0]=[],x[1]=[],d[0]=[],d[1]=[];for(let P=0;P<t;P++){x[0][P]=[],x[1][P]=[],d[0][P]=[],d[1][P]=[];for(let v=0;v<l;v++)v<l-1&&(x[0][P][v]=-1,x[1][P][v]=-1),P<t-1&&(d[0][P][v]=-1,d[1][P][v]=-1)}let u,o,L,c,y;for(let P=0;P<r.length;P++){const v=r[P];for(let C=0;C<v.getLineNum();C++){const B=v.lineList[C].ijPointList;for(u=0;u<B.length-1;u++)c=B[u],y=B[u+1],c.i===y.i?(o=c.i,L=Math.min(c.j,y.j),x[0][o][L]=P,y.j>c.j?x[1][o][L]=1:x[1][o][L]=0):(L=c.j,o=Math.min(c.i,y.i),d[0][o][L]=P,y.i>c.i?d[1][o][L]=0:d[1][o][L]=1)}}let w=[],b=[],I,k;for(k=0;k<n.length;k++){I=n[k];for(let P=0;P<t;P++){w[P]=[],b[P]=[];for(let v=0;v<l;v++)v<l-1&&(e[P][v]!==0&&e[P][v+1]!==0&&(s[P][v]-I)*(s[P][v+1]-I)<0?w[P][v]=(I-s[P][v])/(s[P][v+1]-s[P][v]):w[P][v]=-2),P<t-1&&(e[P][v]!==0&&e[P+1][v]!==0&&(s[P][v]-I)*(s[P+1][v]-I)<0?b[P][v]=(I-s[P][v])/(s[P+1][v]-s[P][v]):b[P][v]=-2)}h=A.isoline_UndefData(s,a,i,I,w,b,x,d,f.length);for(let P of h)f.push(P)}for(let P=0;P<r.length;P++){const C=r[P].lineList[0];for(let M=0;M<f.length;M++){const B=f[M];if(B.type==="Close"){const E=B.pointList[0];G(C.pointList,E)&&(B.borderIdx=P)}f.splice(M,1),f.splice(M,0,B)}}return f}tracingPolygons(n,s){const e=this._s0,a=this._borders;let i=[],t=[],l,r=[],p,f,h,g,x,d,u,o=[],L=[],c,y,w,b=0,I;for(d=0;d<a.length;d++){if(L=[],r=[],o=[],i=[],f=a[d],h=f.lineList[0],p=h.pointList,Q(p)||p.reverse(),f.getLineNum()===1){for(u=0;u<p.length;u++)g=p[u],x=new J,x.id=-1,x.point=g,x.value=e[h.ijPointList[u].i][h.ijPointList[u].j],L.push(x);for(u=0;u<n.length;u++)c=n[u],c.borderIdx===d&&(o.push(c),c.type==="Border"&&(g=c.pointList[0],x=new J,x.id=o.length-1,x.point=g,x.value=c.value,r.push(x),g=c.pointList[c.pointList.length-1],x=new J,x.id=o.length-1,x.point=g,x.value=c.value,r.push(x)));if(o.length===0){if(w=h.ijPointList[0],y=new R,e[w.i][w.j]<s[0])b=s[0],y.isHighCenter=!1;else{for(u=s.length-1;u>=0;u--)if(e[w.i][w.j]>s[u]){b=s[u];break}y.isHighCenter=!0}p.length>0&&(y.isBorder=!0,y.highValue=b,y.lowValue=b,y.extent=new q,y.area=z(p,y.extent),y.startPointIdx=0,y.isClockWise=!0,y.outLine.type="Border",y.outLine.value=b,y.outLine.borderIdx=d,y.outLine.pointList=p,y.holeLines=[],i.push(y))}else r.length>0?l=A.insertPoint2Border(r,L):l=L,i=A.tracingPolygons_Line_Border(o,l);i=A.addPolygonHoles(i)}else{for(h=f.lineList[0],u=0;u<n.length;u++)c=n[u],c.borderIdx===d&&(o.push(c),c.type==="Border"&&(g=c.pointList[0],x=new J,x.id=o.length-1,x.point=g,x.value=c.value,r.push(x),g=c.pointList[c.pointList.length-1],x=new J,x.id=o.length-1,x.point=g,x.value=c.value,r.push(x)));if(o.length===0){if(w=h.ijPointList[0],y=new R,e[w.i][w.j]<s[0])b=s[0],y.isHighCenter=!1;else{for(u=s.length-1;u>=0;u--)if(e[w.i][w.j]>s[u]){b=s[u];break}y.isHighCenter=!0}p.length>0&&(y.isBorder=!0,y.highValue=b,y.lowValue=b,y.area=z(p,y.extent),y.startPointIdx=0,y.isClockWise=!0,y.outLine.type="Border",y.outLine.value=b,y.outLine.borderIdx=d,y.outLine.pointList=p,y.holeLines=[],i.push(y))}else{I=[],I.length=f.getLineNum(),l=A.insertPoint2Border_Ring(e,r,f,I),i=xe(o,l,f,s,I);let P=[];for(;i.length>0;){let v=!1;for(u=0;u<P.length;u++)if(i[0].area>P[u].area){P.push(i[0]),v=!0;break}v||P.push(i[0]),i.splice(0,1)}i=P}let k=[];for(u=0;u<f.getLineNum();u++)k.push(f.lineList[u].pointList);k.length>0&&ae(i,k),i=ue(i)}t.push(...i)}for(let k of t)Q(k.outLine.pointList)||k.outLine.pointList.reverse();return t}static isoline_UndefData(n,s,e,a,i,t,l,r,p){let f=[],h,g,x,d;h=n.length,g=n[0].length;let u,o,L,c,y=0,w=0,b,I,k=0,P=0,v,C,M,B,E,W=!0,_=new re;for(x=0;x<h;x++)for(d=0;d<g;d++){if(d<g-1&&l[0][x][d]>-1&&i[x][d]!==-2){for(E=[],o=x,c=d,b=s[c]+i[o][c]*(s[c+1]-s[c]),I=e[o],l[1][x][d]===0?(u=-1,_.sPoint.x=s[d+1],_.sPoint.y=e[x]):(u=o,_.sPoint.x=s[d],_.sPoint.y=e[x]),L=c,M=new O,M.x=b,M.y=I,E.push(M),_.index=p+f.length,_.point=M,_.borderIdx=l[0][x][d],A._endPointList.push(_),B=new Z,B.type="Border",B.borderIdx=l[0][x][d];;){let m=[y,w],V=[k,P],T=[W];if(Y(u,o,t,i,L,c,s,e,b,m,V,T)){if(y=m[0],w=m[1],k=V[0],P=V[1],W=T[0],M=new O,M.x=k,M.y=P,E.push(M),W){if(l[0][y][w]>-1){l[1][y][w]===0?(_.sPoint.x=s[w+1],_.sPoint.y=e[y]):(_.sPoint.x=s[w],_.sPoint.y=e[y]);break}}else if(r[0][y][w]>-1){r[1][y][w]===0?(_.sPoint.x=s[w],_.sPoint.y=e[y]):(_.sPoint.x=s[w],_.sPoint.y=e[y+1]);break}b=k,u=o,L=c,o=y,c=w}else{B.type="Error";break}}i[x][d]=-2,E.length>1&&B.type!=="Error"?(_.point=M,A._endPointList.push(_),B.value=a,B.pointList=E,f.push(B)):A._endPointList.pop()}if(x<h-1&&r[0][x][d]>-1&&t[x][d]!==-2){for(E=[],o=x,c=d,b=s[c],I=e[o]+t[o][c]*(e[o+1]-e[o]),u=o,r[1][x][d]===0?(L=-1,_.sPoint.x=s[d],_.sPoint.y=e[x]):(L=c,_.sPoint.x=s[d],_.sPoint.y=e[x+1]),M=new O,M.x=b,M.y=I,E.push(M),_.index=p+f.length,_.point=M,_.borderIdx=r[0][x][d],A._endPointList.push(_),B=new Z,B.type="Border",B.borderIdx=r[0][x][d];;){let m=[y,w],V=[k,P],T=[W];if(Y(u,o,t,i,L,c,s,e,b,m,V,T)){if(y=m[0],w=m[1],k=V[0],P=V[1],W=T[0],M=new O,M.x=k,M.y=P,E.push(M),W){if(l[0][y][w]>-1){l[1][y][w]===0?(_.sPoint.x=s[w+1],_.sPoint.y=e[y]):(_.sPoint.x=s[w],_.sPoint.y=e[y]);break}}else if(r[0][y][w]>-1){r[1][y][w]===0?(_.sPoint.x=s[w],_.sPoint.y=e[y]):(_.sPoint.x=s[w],_.sPoint.y=e[y+1]);break}b=k,u=o,L=c,o=y,c=w}else{B.type="Error";break}}t[x][d]=-2,E.length>1&&B.type!=="Error"?(_.point=M,A._endPointList.push(_),B.value=a,B.pointList=E,f.push(B)):A._endPointList.pop()}}for(d=0;d<g-1;d++)i[0][d]!==-2&&(i[0][d]=-2),i[h-1][d]!==-2&&(i[h-1][d]=-2);for(x=0;x<h-1;x++)t[x][0]!==-2&&(t[x][0]=-2),t[x][g-1]!==-2&&(t[x][g-1]=-2);for(x=1;x<h-2;x++)for(d=1;d<g-1;d++)if(t[x][d]!==-2){let m=[];for(o=x,c=d,b=s[c],I=e[x]+t[x][c]*(e[x+1]-e[x]),L=-1,u=o,v=b,C=I,M=new O,M.x=b,M.y=I,m.push(M),B=new Z,B.type="Close";;){let V=[],T=[];if(Y(u,o,t,i,L,c,s,e,b,V,T,[])){if(y=V[0],w=V[1],k=T[0],P=T[1],M=new O,M.x=k,M.y=P,m.push(M),Math.abs(P-C)<1e-6&&Math.abs(k-v)<1e-6)break;b=k,u=o,L=c,o=y,c=w}else{B.type="Error";break}}t[x][d]=-2,m.length>1&&B.type!=="Error"&&(B.value=a,B.pointList=m,f.push(B))}for(x=1;x<h-1;x++)for(d=1;d<g-2;d++)if(i[x][d]!==-2){let m=[];for(o=x,c=d,b=s[c]+i[x][d]*(s[c+1]-s[c]),I=e[x],L=c,u=-1,v=b,C=I,M=new O,M.x=b,M.y=I,m.push(M),B=new Z,B.type="Close";;){let V=[],T=[];if(Y(u,o,t,i,L,c,s,e,b,V,T,[])){if(y=V[0],w=V[1],k=T[0],P=T[1],M=new O,M.x=k,M.y=P,m.push(M),Math.abs(P-C)<1e-6&&Math.abs(k-v)<1e-6)break;b=k,u=o,L=c,o=y,c=w}else{B.type="Error";break}}i[x][d]=-2,m.length>1&&B.type!=="Error"&&(B.value=a,B.pointList=m,f.push(B))}return f}static tracingPolygons_Line_Border(n,s){if(n.length===0)return[];let e=[],a=[],i,t,l,r,p,f;a.push(...n);let h,g,x,d=[];for(d.length=s.length-1,p=0;p<d.length;p++)d[p]=0;let u,o,L,c,y=0,w=0,b=0,I=[];for(o=s.length-1,p=0;p<o;p++)if(s[p].id!==-1){if(u=p,h=[],I.push(s[p]),d[u]<2)for(h.push(s[u].point),u+=1,u===o&&(u=0),L=0,c=0;;){if(x=s[u],x.id===-1){if(d[u]===1)break;b=x.value,c+=1,h.push(x.point),d[u]+=1}else{if(d[u]===2)break;for(d[u]+=1,i=a[x.id],L===0?(y=i.value,w=i.value,L+=1):(i.value>y?w=i.value:i.value<y&&(y=i.value),L+=1),g=[],g.push(...i.pointList),t=g[0],x.point.x===t.x&&x.point.y===t.y||g.reverse(),h.push(...g),f=0;f<s.length-1;f++)if(f!==u&&s[f].id===x.id){u=f,d[u]+=1;break}}if(u===p){h.length>0&&(l=new R,l.isBorder=!0,l.lowValue=y,l.highValue=w,r=new q,l.area=z(h,r),l.isClockWise=!0,l.startPointIdx=I.length-1,l.extent=r,l.outLine.pointList=h,l.outLine.value=y,l.isHighCenter=!0,l.holeLines=[],c>0&&b<y&&(l.isHighCenter=!1,l.highValue=y),l.outLine.type="Border",e.push(l));break}u+=1,u===o&&(u=0)}if(u=p,d[u]<2)for(h=[],h.push(s[u].point),u+=-1,u===-1&&(u=o-1),L=0,c=0;;){if(x=s[u],x.id===-1){if(d[u]===1)break;b=x.value,c+=1,h.push(x.point),d[u]+=1}else{if(d[u]===2)break;for(d[u]+=1,i=a[x.id],L===0?(y=i.value,w=i.value,L+=1):(i.value>y?w=i.value:i.value<y&&(y=i.value),L+=1),g=[],g.push(...i.pointList),t=g[0],x.point.x===t.x&&x.point.y===t.y||g.reverse(),h.push(...g),f=0;f<s.length-1;f++)if(f!==u&&s[f].id===x.id){u=f,d[u]+=1;break}}if(u===p){h.length>0&&(l=new R,l.isBorder=!0,l.lowValue=y,l.highValue=w,r=new q,l.area=z(h,r),l.isClockWise=!1,l.startPointIdx=I.length-1,l.extent=r,l.outLine.pointList=h,l.outLine.value=y,l.isHighCenter=!0,l.holeLines=[],c>0&&b<y&&(l.isHighCenter=!1,l.highValue=y),l.outLine.type="Border",e.push(l));break}u+=-1,u===-1&&(u=o-1)}}let k=[],P;for(p=0;p<a.length;p++)if(i=a[p],i.type==="Close"&&i.pointList.length>0){for(l=new R,l.isBorder=!1,l.lowValue=i.value,l.highValue=i.value,r=new q,l.area=z(i.pointList,r),l.isClockWise=Q(i.pointList),l.extent=r,l.outLine=i,l.isHighCenter=!0,l.holeLines=[],P=!1,f=0;f<k.length;f++)if(l.area>k[f].area){k.splice(f,0,l),P=!0;break}P||k.push(l)}return e=fe(e,k,a,s),e}static addPolygonHoles(n){let s=[],e,a;for(e=0;e<n.length;e++){let i=n[e];i.isBorder||(i.holeIndex=1,s.push(i))}if(s.length===0)return n;{let i=[];for(e=1;e<s.length;e++){let l=s[e];for(a=e-1;a>=0;a--){let r=s[a];if(r.extent.include(l.extent)&&G(r.outLine.pointList,l.outLine.pointList[0])){l.holeIndex=r.holeIndex+1,r.addHole(l);break}}}let t=[];for(e=0;e<s.length;e++)s[e].holeIndex===1&&t.push(s[e]);for(e=0;e<n.length;e++){let l=n[e];if(l.isBorder===!0){for(a=0;a<t.length;a++){let r=t[a];l.extent.include(r.extent)&&G(l.outLine.pointList,r.outLine.pointList[0])&&l.addHole(r)}i.push(l)}}return i.push(...s),i}}tracingStreamline(n,s,e,a,i,t){let l=[],r=n[1].length,p=n.length,f=[],h=[],g=e[1]-e[0],x=a[1]-a[0];t===0&&(t=1);let d=g/Math.pow(t,2),u=d*1.5,o,L;for(o=0;o<p;o++)for(f[o]=[],h[o]=[],L=0;L<r;L++)if(Math.abs(n[o][L]/i-1)<.01)f[o][L]=.1,h[o][L]=.1;else{let k=Math.sqrt(n[o][L]*n[o][L]+s[o][L]*s[o][L]);k===0&&(k=1),f[o][L]=n[o][L]/k*g/t,h[o][L]=s[o][L]/k*x/t}let c=[],y=[];for(o=0;o<p-1;o++)for(c[o]=[],y[o]=[],L=0;L<r-1;L++)o%2==0&&L%2==0?y[o][L]=0:y[o][L]=1,c[o][L]=[];let w,b,I=0;for(o=0;o<p-1;o++)for(L=0;L<r-1;L++)if(y[o][L]===0){let k=[],P=new O,v,C,M,B=new Z;P.x=e[L]+g/2,P.y=a[o]+x/2,k.push(P.clone()),b=new J,b.point=P.clone(),b.id=I,c[o][L].push(b),y[o][L]=1,v=o,C=L;let E=500;for(M=0;M<E;){let W=[];W[0]=v,W[1]=C;let _=ie(P,f,h,e,a,W,!0);if(v=W[0],C=W[1],_){if(Math.abs(n[v][C]/i-1)<.01||Math.abs(n[v][C+1]/i-1)<.01||Math.abs(n[v+1][C]/i-1)<.01||Math.abs(n[v+1][C+1]/i-1)<.01)break;{let m=!1;for(let V of c[v][C])if(Math.sqrt((P.x-V.point.x)*(P.x-V.point.x)+(P.y-V.point.y)*(P.y-V.point.y))<d){m=!0;break}if(!m&&c[v][C].length>1){let V=c[v][C][0],T=c[v][C][1];I===V.id&&I===T.id||(w=le(V.point,T.point,P),w<u&&(m=!0))}if(!m)k.push(P.clone()),b=new J,b.point=P.clone(),b.id=I,c[v][C].push(b),y[v][C]=1;else break}}else break;M+=1}for(P.x=e[L]+g/2,P.y=a[o]+x/2,v=o,C=L,M=0;M<E;){let W=[];W[0]=v,W[1]=C;let _=ie(P,f,h,e,a,W,!1);if(v=W[0],C=W[1],_){if(Math.abs(n[v][C]/i-1)<.01||Math.abs(n[v][C+1]/i-1)<.01||Math.abs(n[v+1][C]/i-1)<.01||Math.abs(n[v+1][C+1]/i-1)<.01)break;{let m=!1;for(let V of c[v][C])if(Math.sqrt((P.x-V.point.x)*(P.x-V.point.x)+(P.y-V.point.y)*(P.y-V.point.y))<d){m=!0;break}if(!m&&c[v][C].length>1){let V=c[v][C][0],T=c[v][C][1];I===V.id&&I===T.id||(w=le(V.point,T.point,P),w<u&&(m=!0))}if(!m)k.splice(0,0,P.clone()),b=new J,b.point=P.clone(),b.id=I,c[v][C].push(b),y[v][C]=1;else break}}else break;M+=1}k.length>1&&(B.pointList=k,l.push(B),I+=1)}return l}static insertPoint2Border(n,s){let e,a,i,t,l,r,p,f=[];for(f.push(...s),i=0;i<n.length;i++)for(a=n[i],p=a.point,e=f[0],l=e.point,t=1;t<f.length;t++){if(e=f[t],r=e.point,(p.x-l.x)*(p.x-r.x)<=0&&(p.y-l.y)*(p.y-r.y)<=0&&(p.x-l.x)*(r.y-l.y)-(r.x-l.x)*(p.y-l.y)==0){f.splice(t,0,a);break}l=r}return f}static insertPoint2Border_Ring(n,s,e,a){let i,t,l,r,p,f,h,g,x,d=[],u=[],o=[];for(p=0;p<e.getLineNum();p++){for(x=e.lineList[p],u=[],l=0;l<x.pointList.length;l++)i=new J,i.id=-1,i.borderIdx=p,i.point=x.pointList[l],i.value=n[x.ijPointList[l].i][x.ijPointList[l].j],u.push(i);for(l=0;l<s.length;l++)for(t=s[l].clone(),t.borderIdx=p,g=t.point,f=u[0].point.clone(),r=1;r<u.length;r++){if(h=u[r].point.clone(),(g.x-f.x)*(g.x-h.x)<=0&&(g.y-f.y)*(g.y-h.y)<=0&&(g.x-f.x)*(h.y-f.y)-(h.x-f.x)*(g.y-f.y)==0){u.splice(r,0,t);break}f=h}for(o=[],l=0;l<u.length;l++)t=u[l],t.bInnerIdx=l,o.push(t);a[p]=o.length,d.push(...o)}return d}};let ne=A;ne._endPointList=[];function pe(n,s,e){const a=ce(s);let i=0,t=0;for(let l=0;l<4;l++){const r=n[e+l];i=i+a[l]*r.x,t=t+a[l]*r.y}return[i,t]}function de(n){return 1/6*(-n+1)*(-n+1)*(-n+1)}function ge(n){return 1/6*(3*n*n*n-6*n*n+4)}function ye(n){return 1/6*(-3*n*n*n+3*n*n+3*n+1)}function Le(n){return 1/6*n*n*n}function ce(n){return[de(n),ge(n),ye(n),Le(n)]}function Pe(n,s){let e,a,i,t,l,r=[];if(s<4)return null;let p=!1;l=n[0];let f=n[s-1];for(l.x===f.x&&l.y===f.y&&(n.splice(0,1),n.push(n[0]),n.push(n[1]),n.push(n[2]),n.push(n[3]),n.push(n[4]),n.push(n[5]),n.push(n[6]),p=!0),s=n.length,a=0;a<s-3;a++)for(e=0;e<=1;e+=.05){let h=pe(n,e,a);i=h[0],t=h[1],p?a>3&&(l=new O,l.x=i,l.y=t,r.push(l)):(l=new O,l.x=i,l.y=t,r.push(l))}return p?r.push(r[0]):(r.splice(0,0,n[0]),r.push(n[n.length-1])),r}function be(n){let s=[];for(let e=0;e<n.length;e++){const a=n[e],i=a.pointList;if(i.length<=1)continue;if(i.length===2){let l=new O,r=i[0],p=i[1];l.x=(p.x-r.x)/4+r.x,l.y=(p.y-r.y)/4+r.y,i.splice(1,0,l),l=new O,l.x=(p.x-r.x)/4*3+r.x,l.y=(p.y-r.y)/4*3+r.y,i.splice(2,0,l)}if(i.length===3){let l=new O,r=i[0],p=i[1];l.x=(p.x-r.x)/2+r.x,l.y=(p.y-r.y)/2+r.y,i.splice(1,0,l)}const t=Pe(i,i.length);a.pointList=t,s.push(a)}return s}function we(n,s,e,a){for(var i=[],t=0,l=s.pointList;t<l.length;t++){var r=l[t];i.push([r.x,r.y])}var p,f=s.value;if(n==="LineString")p={type:"LineString",coordinates:i};else if(p={type:"Polygon",coordinates:[i]},a&&e){if(a.isHighCenter){var h=e.indexOf(a.lowValue);h>=0&&h<e.length-1?f=e[h+1]:f=a.highValue}else f=a.lowValue;if(a.hasHoles())for(var g=0;g<a.holeLines.length;g++){for(var x=a.holeLines[g],d=[],u=0,o=x.pointList;u<o.length;u++){var r=o[u];d.push([r.x,r.y])}p.coordinates.push(d)}}var L={id:s.BorderIdx,value:f},c={type:"Feature",geometry:p,properties:L};return c}const ve={smoothLines:be,getFeatureOfPoints:we};D.Contour=ne,D.uti=ve,Object.defineProperty(D,"__esModule",{value:!0}),D[Symbol.toStringTag]="Module"});
